'''
문제
준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.

동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)

둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. (1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)

출력
첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.
'''
'''
풀이
- 이번 문제는 그리디 알고리즘에 관한 문제로 매순간 최고의 선택을 반복하면 문제를 해결할 수 있다. 동전의 값어치는 배수로 되어 있기 때문에 매순간 지불할 수 있는
동전 중 가장 높은 값어치의 동전을 계속 지불한다면 k값에 맞는 최소한의 동전 수를 구할 수 있다.
'''
#코드

n, k = map(int, input().split())
a= []
for i in range(n):
    cur = int(input())
    if cur <= k:
        a.append(cur)
    else:
        pass
count = 0

while k > 0:

    if a[-1] <= k:
        count += k //a[-1]
        k = k % a[-1]
    else:
        a.pop()

    if not a:
        break
print(count)
